# Generated by Django 3.2.5 on 2021-07-20 03:46

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('common', '0001_initial'),
        ('farm_site', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=48)),
                ('open_to_public', models.BooleanField(default=False)),
                ('open_only_to', models.CharField(blank=True, max_length=96, null=True)),
                ('capacity', models.PositiveSmallIntegerField(default=100, help_text='Maximum number of members allowed to pickup shares')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('date_delivery', models.DateField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='orders', to='farm_site.location')),
            ],
            options={
                'ordering': ['date_delivery', 'subscription'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(help_text='Brief descriptive name of product', max_length=32)),
                ('weeks_available', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(default=0), size=None)),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Cost')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(help_text='Brief descriptive name of season', max_length=32)),
                ('date_deliveries_begin', models.DateField(blank=True, null=True, verbose_name='First Delivery Week')),
                ('date_deliveries_end', models.DateField(blank=True, null=True, verbose_name='Last Delivery Week')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['date_deliveries_begin'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('deliver_to', models.CharField(choices=[('MEMBER', 'Member Address'), ('LOCATION', 'Location')], default='MEMBER', max_length=12)),
                ('remaining_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Remaining subscription balance')),
                ('status', models.CharField(choices=[('CURRENT', 'Current'), ('OUTSTANDING', 'Outstanding'), ('PAID', 'Paid-in-Full')], default='CURRENT', max_length=12)),
                ('total_charges', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Total subscription charges')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscriptions', to='farm_site.location')),
                ('products', models.ManyToManyField(blank=True, to='farm_site.Product')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='subscriptions', to='farm_site.season')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['season', 'user'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionAddress',
            fields=[
                ('addressbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='common.addressbasemodel')),
                ('subscription', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='farm_site.subscription')),
            ],
            options={
                'ordering': ['subscription'],
            },
            bases=('common.addressbasemodel',),
        ),
        migrations.CreateModel(
            name='OrderLine',
            fields=[
                ('id', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='farm_site.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='lines', to='farm_site.product')),
            ],
            options={
                'ordering': ['order', 'product'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='subscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='orders', to='farm_site.subscription'),
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=48)),
                ('products', models.ManyToManyField(blank=True, to='farm_site.Product')),
                ('season', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, to='farm_site.season')),
            ],
            options={
                'ordering': ['season'],
            },
        ),
        migrations.CreateModel(
            name='LocationSubscribedCount',
            fields=[
                ('id', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('count', models.PositiveSmallIntegerField(default=0)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribed_count_by_season', to='farm_site.location')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribed_count_by_location', to='farm_site.season')),
            ],
            options={
                'ordering': ['location'],
            },
        ),
        migrations.CreateModel(
            name='LocationDelivery',
            fields=[
                ('id', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('completed', models.BooleanField(default=False)),
                ('deliver_to_address_street', models.TextField(blank=True, null=True)),
                ('is_dock', models.BooleanField(default=False)),
                ('delivery_hours', models.CharField(blank=True, max_length=36, null=True)),
                ('dock_restrictions', models.TextField(blank=True, default='')),
                ('provide_security_with_license_for_driver', models.BooleanField(choices=[('YES', 'Yes'), ('NO', 'No'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=7, verbose_name="Do we need to provide truck driver's license?")),
                ('service_elevator_restrictions', models.TextField(blank=True, default='')),
                ('stairs_for_delivery_pickup', models.BooleanField(choices=[('YES', 'Yes'), ('NO', 'No'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=7, verbose_name='Does delivery/pickup have to negotiate stairs?')),
                ('stairs_for_delivery_pickup_number', models.CharField(blank=True, max_length=32, null=True)),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_details', to='farm_site.location')),
            ],
            options={
                'verbose_name_plural': 'Location delivery details',
            },
        ),
        migrations.CreateModel(
            name='LocationCoordinates',
            fields=[
                ('id', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('coordinates_resolved', models.BooleanField(default=False)),
                ('coordinate_longitude', models.DecimalField(blank=True, decimal_places=6, default=0.0, max_digits=9, null=True, verbose_name='Longitude')),
                ('coordinate_latitude', models.DecimalField(blank=True, decimal_places=6, default=0.0, max_digits=8, null=True, verbose_name='Latitude')),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='coordinates', to='farm_site.location')),
            ],
            options={
                'ordering': ['location'],
            },
        ),
        migrations.CreateModel(
            name='LocationAddress',
            fields=[
                ('addressbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='common.addressbasemodel')),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='farm_site.location')),
            ],
            options={
                'ordering': ['location'],
            },
            bases=('common.addressbasemodel',),
        ),
        migrations.CreateModel(
            name='Installment',
            fields=[
                ('id', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('date_due', models.DateField()),
                ('charges_due', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Installment due')),
                ('datetime_paid', models.DateTimeField()),
                ('charges_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Installment paid')),
                ('transaction_reference', models.CharField(blank=True, max_length=48, null=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='installments', to='farm_site.subscription')),
            ],
            options={
                'ordering': ['subscription', 'datetime_paid'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalSubscriptionAddress',
            fields=[
                ('addressbasemodel_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='common.addressbasemodel')),
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('address_street', models.CharField(max_length=64)),
                ('address_additional', models.CharField(max_length=64)),
                ('address_city', models.CharField(max_length=48)),
                ('address_state', models.CharField(blank=True, choices=[('AL', 'Alabama '), ('AK', 'Alaska '), ('AZ', 'Arizona '), ('AR', 'Arkansas '), ('CA', 'California '), ('CO', 'Colorado '), ('CT', 'Connecticut '), ('DC', 'District of Columbia '), ('DE', 'Delaware '), ('FL', 'Florida '), ('GA', 'Georgia '), ('HI', 'Hawaii '), ('ID', 'Idaho '), ('IL', 'Illinois '), ('IN', 'Indiana '), ('IA', 'Iowa '), ('KS', 'Kansas '), ('KY', 'Kentucky '), ('LA', 'Louisiana '), ('ME', 'Maine '), ('MD', 'Maryland '), ('MA', 'Massachusetts '), ('MI', 'Michigan '), ('MN', 'Minnesota '), ('MS', 'Mississippi '), ('MO', 'Missouri '), ('MT', 'Montana '), ('NE', 'Nebraska '), ('NV', 'Nevada '), ('NH', 'New Hampshire '), ('NJ', 'New Jersey '), ('NM', 'New Mexico '), ('NY', 'New York '), ('NC', 'North Carolina '), ('ND', 'North Dakota '), ('OH', 'Ohio '), ('OK', 'Oklahoma '), ('OR', 'Oregon '), ('PA', 'Pennsylvania '), ('RI', 'Rhode Island '), ('SC', 'South Carolina '), ('SD', 'South Dakota '), ('TN', 'Tennessee '), ('TX', 'Texas '), ('UT', 'Utah '), ('VT', 'Vermont '), ('VA', 'Virginia '), ('WA', 'Washington '), ('WV', 'West Virginia '), ('WI', 'Wisconsin '), ('WY', 'Wyoming ')], max_length=2, null=True)),
                ('address_zipcode', models.CharField(max_length=10)),
                ('address_cross_streets', models.CharField(blank=True, max_length=128, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('subscription', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.subscription')),
            ],
            options={
                'verbose_name': 'historical subscription address',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSubscription',
            fields=[
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('deliver_to', models.CharField(choices=[('MEMBER', 'Member Address'), ('LOCATION', 'Location')], default='MEMBER', max_length=12)),
                ('remaining_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Remaining subscription balance')),
                ('status', models.CharField(choices=[('CURRENT', 'Current'), ('OUTSTANDING', 'Outstanding'), ('PAID', 'Paid-in-Full')], default='CURRENT', max_length=12)),
                ('total_charges', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Total subscription charges')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.location')),
                ('season', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.season')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical subscription',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSeason',
            fields=[
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('name', models.CharField(help_text='Brief descriptive name of season', max_length=32)),
                ('date_deliveries_begin', models.DateField(blank=True, null=True, verbose_name='First Delivery Week')),
                ('date_deliveries_end', models.DateField(blank=True, null=True, verbose_name='Last Delivery Week')),
                ('is_active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical season',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProduct',
            fields=[
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('name', models.CharField(help_text='Brief descriptive name of product', max_length=32)),
                ('weeks_available', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(default=0), size=None)),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Cost')),
                ('is_active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical product',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOrderLine',
            fields=[
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('quantity', models.PositiveSmallIntegerField(default=1)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.order')),
                ('product', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.product')),
            ],
            options={
                'verbose_name': 'historical order line',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOrder',
            fields=[
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('date_delivery', models.DateField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.location')),
                ('subscription', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.subscription')),
            ],
            options={
                'verbose_name': 'historical order',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMenu',
            fields=[
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('name', models.CharField(max_length=48)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('season', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.season')),
            ],
            options={
                'verbose_name': 'historical menu',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocationSubscribedCount',
            fields=[
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('count', models.PositiveSmallIntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.location')),
                ('season', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.season')),
            ],
            options={
                'verbose_name': 'historical location subscribed count',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocationDelivery',
            fields=[
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('completed', models.BooleanField(default=False)),
                ('deliver_to_address_street', models.TextField(blank=True, null=True)),
                ('is_dock', models.BooleanField(default=False)),
                ('delivery_hours', models.CharField(blank=True, max_length=36, null=True)),
                ('dock_restrictions', models.TextField(blank=True, default='')),
                ('provide_security_with_license_for_driver', models.BooleanField(choices=[('YES', 'Yes'), ('NO', 'No'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=7, verbose_name="Do we need to provide truck driver's license?")),
                ('service_elevator_restrictions', models.TextField(blank=True, default='')),
                ('stairs_for_delivery_pickup', models.BooleanField(choices=[('YES', 'Yes'), ('NO', 'No'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', max_length=7, verbose_name='Does delivery/pickup have to negotiate stairs?')),
                ('stairs_for_delivery_pickup_number', models.CharField(blank=True, max_length=32, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.location')),
            ],
            options={
                'verbose_name': 'historical location delivery',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocationCoordinates',
            fields=[
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('coordinates_resolved', models.BooleanField(default=False)),
                ('coordinate_longitude', models.DecimalField(blank=True, decimal_places=6, default=0.0, max_digits=9, null=True, verbose_name='Longitude')),
                ('coordinate_latitude', models.DecimalField(blank=True, decimal_places=6, default=0.0, max_digits=8, null=True, verbose_name='Latitude')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.location')),
            ],
            options={
                'verbose_name': 'historical location coordinates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocationAddress',
            fields=[
                ('addressbasemodel_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='common.addressbasemodel')),
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('address_street', models.CharField(max_length=64)),
                ('address_additional', models.CharField(max_length=64)),
                ('address_city', models.CharField(max_length=48)),
                ('address_state', models.CharField(blank=True, choices=[('AL', 'Alabama '), ('AK', 'Alaska '), ('AZ', 'Arizona '), ('AR', 'Arkansas '), ('CA', 'California '), ('CO', 'Colorado '), ('CT', 'Connecticut '), ('DC', 'District of Columbia '), ('DE', 'Delaware '), ('FL', 'Florida '), ('GA', 'Georgia '), ('HI', 'Hawaii '), ('ID', 'Idaho '), ('IL', 'Illinois '), ('IN', 'Indiana '), ('IA', 'Iowa '), ('KS', 'Kansas '), ('KY', 'Kentucky '), ('LA', 'Louisiana '), ('ME', 'Maine '), ('MD', 'Maryland '), ('MA', 'Massachusetts '), ('MI', 'Michigan '), ('MN', 'Minnesota '), ('MS', 'Mississippi '), ('MO', 'Missouri '), ('MT', 'Montana '), ('NE', 'Nebraska '), ('NV', 'Nevada '), ('NH', 'New Hampshire '), ('NJ', 'New Jersey '), ('NM', 'New Mexico '), ('NY', 'New York '), ('NC', 'North Carolina '), ('ND', 'North Dakota '), ('OH', 'Ohio '), ('OK', 'Oklahoma '), ('OR', 'Oregon '), ('PA', 'Pennsylvania '), ('RI', 'Rhode Island '), ('SC', 'South Carolina '), ('SD', 'South Dakota '), ('TN', 'Tennessee '), ('TX', 'Texas '), ('UT', 'Utah '), ('VT', 'Vermont '), ('VA', 'Virginia '), ('WA', 'Washington '), ('WV', 'West Virginia '), ('WI', 'Wisconsin '), ('WY', 'Wyoming ')], max_length=2, null=True)),
                ('address_zipcode', models.CharField(max_length=10)),
                ('address_cross_streets', models.CharField(blank=True, max_length=128, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.location')),
            ],
            options={
                'verbose_name': 'historical location address',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocation',
            fields=[
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('name', models.CharField(max_length=48)),
                ('open_to_public', models.BooleanField(default=False)),
                ('open_only_to', models.CharField(blank=True, max_length=96, null=True)),
                ('capacity', models.PositiveSmallIntegerField(default=100, help_text='Maximum number of members allowed to pickup shares')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical location',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInstallment',
            fields=[
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('date_due', models.DateField()),
                ('charges_due', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Installment due')),
                ('datetime_paid', models.DateTimeField()),
                ('charges_paid', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, verbose_name='Installment paid')),
                ('transaction_reference', models.CharField(blank=True, max_length=48, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('subscription', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_site.subscription')),
            ],
            options={
                'verbose_name': 'historical installment',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDelivery',
            fields=[
                ('id', models.CharField(blank=True, db_index=True, default=uuid.uuid4, editable=False, max_length=36)),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('date', models.DateField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical delivery',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.CharField(blank=True, default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('date', models.DateField()),
                ('orders', models.ManyToManyField(blank=True, related_name='delivery_detail', to='farm_site.Order')),
            ],
            options={
                'verbose_name_plural': 'Deliveries',
            },
        ),
    ]
